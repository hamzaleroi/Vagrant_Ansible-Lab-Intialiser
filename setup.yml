---
- name: make the hosts accessible from the outside
  hosts: all
  gather_facts: no
  vars:
    username: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          32623836643961613565626537393166326465653863326634343265343162356239333435343538
          3338323030333665666538386239613331643935336166650a356439353138336361346663333235
          31653063656164326531386664646362363363626333636138363261663634373336386337356262
          3732356263363563610a366333366231376265396133396131363732303565666433336133663035
          3038
    password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          62626534303064396639376365313364616465643133333637353464383164616365303032373530
          3738343466636563656166326263366561663362323365640a386232663139366661656630336266
          64653237353462383762373735656131303436656465613034336238613962313164333532656139
          3537346133353334380a303930646134366331613136643162663439396663313264643535333438
          3065

  tasks:
    - name: create the user ansible
      become: true
      user:
        name: "{{username}}"
        state: present
        password: "{{ password | string | password_hash('sha512')}}"
        create_home: yes
        group: sudo
    - name: generate rsa keys
      become: true
      user:
        name: "{{username}}"
        generate_ssh_key: yes
        ssh_key_bits: 1024
        ssh_key_file: "/home/{{username}}/.ssh/id_rsa"
      notify: 
        - set rsa key
        - set authorized keys
        - restart ssh
    - name: fetching public keys
      tags: fetching
      become: yes
      fetch:
        src: "/home/{{username}}/.ssh/id_rsa.pub"
        dest: "./public_keys/{{inventory_hostname}}.pub"
        flat: yes
    - name: deleting the file
      tags: deleting
      delegate_to: localhost
      file:
        path: "~/.ssh/known_hosts"
        state: absent
    - name: assembling keys in one file
      tags: assembling
      delegate_to: localhost
      assemble:
        src: "./public_keys/"
        regexp: "pub$"
        dest: "~/.ssh/known_hosts"
    - name: copying localhost's rsa keys
      tags:
        - copy
      become: yes
      copy:
        src: "~/.ssh/id_rsa.pub"
        dest: "/home/{{username}}/.ssh/authorized_keys"
      notify:
        - set authorized keys
        - restart ssh
      
    - name: gathering facts
      tags: gather
      setup:
        filter: "ansible_eth1"
      register: out
    - name: registering data
      tags: register
      delegate_to: localhost
      copy:
        content: "ansible_host: {{out.ansible_facts.ansible_eth1.ipv4.address}}\nansible_port: 22"
        dest: "./host_vars/{{inventory_hostname}}"
      notify:
        - create global inventory file
  handlers:
    - name:  create global inventory file
      delegate_to: localhost
      tags: assemble
      vars:
        hosts: "{{hostvars}}"
        user: "{{username}}"
      template:
        src: "./hosts.j2"
        dest: "./hosts.ini"
        force: yes
    - name: set rsa key
      become: yes
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^HostKey /etc/ssh/ssh_host_rsa_key"
        line: "HostKey /home/{{username}}/.ssh/id_rsa"
    - name: set authorized keys 
      become: yes
      lineinfile:
        path: /etc/ssh/sshd_config
        insertbefore: "#AuthorizedKeysFile"
        firstmatch: yes
        line: "AuthorizedKeysFile     /home/{{username}}/.ssh/authorized_keys"
    - name: restart ssh
      become: yes
      service:
        name: ssh
        state: restarted